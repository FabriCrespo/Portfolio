---
import ExperienceItem from "./ExperienceItem.astro";
import { t } from "../utils/i18n";

const EXPERIENCE = [
  {
    date: "2025 (Current)",
    title: t('experience.items.intern.title'),
    company: t('experience.items.intern.company'),
    description: t('experience.items.intern.description'),
  },
  {
    date: "Ongoing",
    title: t('experience.items.founder.title'),
    company: t('experience.items.founder.company'),
    description: t('experience.items.founder.description'),
    link: "",
  },
  {
    date: "2024 (4 months)",
    title: t('experience.items.spm.title'),
    company: t('experience.items.spm.company'),
    description: t('experience.items.spm.description'),
  },
  {
    date: "2023",
    title: t('experience.items.freelance.title'),
    company: t('experience.items.freelance.company'),
    description: t('experience.items.freelance.description'),
  },
];
---

<ol class="relative mt-16">
  {
    EXPERIENCE.map((experience) => (
      <li class="">
        <ExperienceItem {...experience} />
      </li>
    ))
  }
</ol>

<script>
  import { t } from "../utils/i18n"

  const updateExperienceText = () => {
    const experienceItems = document.querySelectorAll('.experience-item')
    const items = [
      'intern',
      'founder',
      'spm',
      'freelance'
    ]

    experienceItems.forEach((item, index) => {
      const title = item.querySelector('.experience-title')
      const company = item.querySelector('.experience-company')
      const description = item.querySelector('.experience-description')

      if (title) title.textContent = t(`experience.items.${items[index]}.title`)
      if (company) company.textContent = t(`experience.items.${items[index]}.company`)
      if (description) description.textContent = t(`experience.items.${items[index]}.description`)
    })
  }

  // Actualizar cuando cambia el idioma
  window.addEventListener('storage', (e) => {
    if (e.key === 'language') {
      updateExperienceText()
    }
  })

  // Actualizar cuando se carga la pÃ¡gina
  document.addEventListener('astro:page-load', () => {
    updateExperienceText()
  })
</script>
